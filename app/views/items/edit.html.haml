= content_for :title, "Details for " + @item.name.to_s + " item"

-content_for :menu do
  %li= link_to "Back to all items", event_all_items_path(@item.event)
  %li= link_to "Back to your items", event_items_path(@item.event)
  %li= link_to 'Back to events page', events_path
  %li
    %label= @item.name.to_s + " item"
  %li= link_to "View item details", item_path(@item)
  - if current_user.can_update?(@item)
    %li= link_to("Edit item", edit_item_path(@item)) 
  - if current_user.can_delete?(@item)
    %li= link_to("Delete item", item_path(@item), method: :delete, data: {confirm: "Are you sure you want to delete item #{@item.name} at the #{@item.value_date.strftime('%d %b %Y')}?"}) 
  %li
    %label= @item.event.name
  %li= link_to "Create new item", new_event_item_path(@item.event)
  %li.has-submenu
    = link_to "#{@item.event.name} event", nil
    %ul.left-submenu
      %li.back= link_to "Back", nil
      %li
        %label= @item.event.name + " event"
      - if current_user.can_update?(@item.event)
        %li= link_to("Invite to event", invite_to_event_path(@item.event)) 
      %li= link_to "View event details", event_path(@item.event)
      - if current_user.can_update?(@item.event)
        %li= link_to("Edit event", edit_event_path(@item.event)) 
      - if current_user.can_delete?(@item.event)
        %li= link_to("Delete event", event_path(@item.event), method: :delete, :data => {:confirm => "Are you sure you want to delete event #{@item.event.name}?"}) 
      %li= link_to "All event items", event_all_items_path(@item.event)
      %li= link_to "Your event items", event_items_path(@item.event)
      %li= link_to "Expense summary", expense_report_path(@item.event)
      %li= link_to "Who owes you?", who_owes_you_path(@item.event)
      %li= link_to "You owe whom?", you_owe_whom_path(@item.event)
end

- if @item.errors.any?
  %div#error_explanation
    %p #{pluralize(@item.errors.count, "error")} prevented this item from being saved:
    %ul
    - @item.errors.full_messages.each do |msg|
      %li= msg

= form_for @item, html: { 'data-abide': true, novalidate: true } do |f|
  .row
    .small-12.medium-8.large-6.columns.small-centered
      %fieldset
        %legend Edit item
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :name
          .small-12.medium-8.large-8.columns.end
            = f.text_field :name, required: true
            %small.error Please name the item.
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :description 
          .small-12.medium-8.large-8.columns.end
            = f.text_field :description, required: true
            %small.error Please describe the item.
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :value_date 
          .small-12.medium-8.large-8.columns.end
            = f.date_field :value_date, size: 10, required: true
            %small.error Please choose a value date for the item.
        .row
          .field.small-12.medium-4.large-4.columns.end
            =f.label :payer_id, "Payer"
          .small-12.medium-8.large-8.columns.end
            = f.select :payer_id, options_from_collection_for_select(@item.event.users, :id, :name, current_user.id)
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :foreign_amount
          .small-12.medium-8.large-8.columns.end
            = f.number_field :foreign_amount, value: @item.foreign_amount, required: true, pattern: :amount
            %small.error Please type in how much you paid for the item.
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :foreign_currency
          .small-12.medium-8.large-8.columns.end
            = f.select :foreign_currency, options_from_collection_for_select(Money::Currency.all, :id, :iso_code, @item.foreign_currency)
            %small.error Please choose a currency.
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :exchange_rate, "Exchange rate"
          .small-12.medium-8.large-8.columns.end
            = f.number_field :exchange_rate, placeholder: "Put 0 to fetch currency automatically", required: true, pattern: :exchange_rate
            %small.error Exchange rate must be a positive number.
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :base_amount, "Base amount"
          .small-12.medium-8.large-8.columns.end
            = f.number_field :base_amount, value: @item.base_amount, readonly: true, placeholder: "= Exchange rate * Foreign amount"
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :base_currency, "Base currency"
          .small-12.medium-8.large-8.columns.end
            = f.text_field :base_currency, value: @item.event.event_currency.upcase, disabled: true
        .row
          .field.small-12.medium-4.large-4.columns.end
            = f.label :beneficiaries
          .small-12.medium-8.large-8.columns.end
            = f.collection_check_boxes(:beneficiary_ids, @item.event.users, :id, :short_name) do |b|
              =  b.label { b.check_box + " " + b.text }
        .row
          .field.small-12.medium-4.large-4.columns.end
            &nbsp;
          .actions.small-12.medium-8.large-8.columns.end
            = f.submit "Post item"
